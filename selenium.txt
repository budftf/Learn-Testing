// ==========================================================================
//         

 List<WebElement> tr_collection = driver.findElements(By.xpath(".//table[@id='fsConnectorRow']/tbody/tr"));
  System.out.println("NUMBER OF ROWS IN THIS TABLE = "+tr_collection.size());
  int row_num=1,col_num=1;
  for (WebElement trElement : tr_collection) 
  {
    List<WebElement> td_collection = trElement.findElements(By.tagName("td")); 
   int n = td_collection.size();
   for(int i=0;i<td_collection.size();i++)
    System.out.println(td_collection.get(i).getText());
   System.out.println("NUMBER OF COLUMNS="+td_collection.size());
   col_num=1;
   for (WebElement tdElement  :td_collection)
   {
    System.out.println("row # " +row_num+ ", col # " +col_num+ "text=" +tdElement.getText());
    col_num++;
   }
   row_num++;
  }



<html>
      <head>
                <title>Sample Table</title>
       </head>
       <body>
                <table border="1">
                       <tbody>
                                  <tr>
                  		<td>cell one</td>
                  		<td>cell two</td>
              		    </tr>
                                  <tr>
                  		<td>cell three</td>
                  		<td>cell four</td>
              		     </tr>
                           </tbody>
                 </table>
        </body>
</html>

public static void main(String[] args) {
  String baseUrl = “file: ///D:/Technology/Selenium cases/Table.html”;
   Webdriver driver = new FirefoxDriver();
  driver.get(baseUrl);
  String cellText = driver.findElement(By.xpath(“ //table/tbody/tr[2]/td[2]”)).getText();
     System.out.println(“Text in Cell four is: ”+cellText); driver.quit();
    }

// ===========================================================================
<html>
<body>
<select id = "designation">
<option value = "MD">MD</option>
<option value = "prog"> Programmer </option>
<option value = "CEO"> CEO </option>
</option>
</select>
<body>
</html>


elect dropdown = new Select(driver.findElement(By.id("designation")));
To select its option say 'Programmer' you can do

dropdown.selectByVisibleText("Programmer ");


WebElement select = driver.findElement(By.id("gender"));
List<WebElement> options = select.findElements(By.tagName("option"));

for (WebElement option : options) {

if("Germany".equals(option.getText().trim()))

 option.click();   
}

// ========================================================================
 WebDriver _driver = new InternetExplorerDriver();
    _driver.navigate().to("http://www.google.co.in/");
    List <WebElement> alllinks = _driver.findElements(By.tagName("a"));

    for(int i=0;i<alllinks.size();i++)
        System.out.println(alllinks.get(i).getText());

    for(int i=0;i<alllinks.size();i++){
        alllinks.get(i).click();
        _driver.navigate().back();
    }

<a href="http://www.bestbuy.com">BestBuy </a>

// ===========================================================

package aa;


import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.Driver;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Properties;
import java.util.Scanner;
import java.util.Set;
import java.util.concurrent.TimeUnit;

import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.HttpException;
import org.apache.commons.httpclient.HttpStatus;
import org.apache.commons.httpclient.NameValuePair;
import org.apache.commons.httpclient.methods.GetMethod;
import org.apache.commons.httpclient.methods.PutMethod;
import org.apache.commons.httpclient.methods.StringRequestEntity;
import org.apache.http.HttpEntity;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.message.BasicNameValuePair;
import org.apache.http.util.EntityUtils;
//import org.apache.http.client.HttpClient;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.json.JSONException;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.ie.InternetExplorerDriver;


 


public class prog1 {
	public static String Msg="";
	public static void main(String[] args) throws Exception {
		//getallLinks("http://localhost:8081/FTF/menu.html");
		String appUrl="http://services.groupkt.com/country/get/all";
		
		submitPutRequest( appUrl, "");
		
		
		//writeExcel() ;
		System.exit(0);
		
		String dbConnectionURL="jdbc:oracle:thin:@localhost:1521:orcl";
		String usernm="bud";
		String password="bud";
		String sqlQuery="select * from student";
		
		String []rec = dbConnectionURL.split(":");
		String f=rec[0];
		String s=rec[1];
		System.out.println (f + "=" + s);
		
		for (int i=0;i<rec.length; i ++)
			System.out.println("rec val " + i + "." + rec[i]);
		
		System.exit(0);
		
		
		
		
	//  1)  Get all the Input Info
		String retrec=GetInputInfo("C:\\classinterview\\config.properties","D");
		System.out.println("Retrec=" + retrec);

	//  Invoke Proper URL
		String url=retrec.split(",")[3];
		String exph1value=retrec.split(",")[2];
		//String usernm=retrec.split(",")[0];
		
		
		 WebDriver driver=invokeandverifyur( url,exph1value );
		 String pstid="100";
		 
		 populatescreen (driver,pstid);
		
	      readdb(  dbConnectionURL, usernm, password,sqlQuery) ;
	      

		System.exit(0);
		
		
		
		
		
		readdb( dbConnectionURL, usernm, password, sqlQuery) ;
		
		
		System.out.println(retrec);
		
		
	}
	// ============================================================================
	public static void gethash()
	{
	  HashMap<Integer,String> hm=new HashMap<Integer,String>();  
	  hm.put(100,"Amit");  
	  hm.put(101,"Vijay");  
	  hm.put(102,"Rahul");  
	  for(Map.Entry m:hm.entrySet()){  
	   System.out.println(m.getKey()+" "+m.getValue());  
	  }  
	  
	
	
	
	   Map<Integer,Book> map=new HashMap<Integer,Book>();    
	    //Creating Books    
	    Book b1=new Book(101,"Let us C","Yashwant Kanetkar","BPB",8);    
	    Book b2=new Book(102,"Data Communications & Networking","Forouzan","Mc Graw Hill",4);    
	    Book b3=new Book(103,"Operating System","Galvin","Wiley",6);    
	    //Adding Books to map   
	    map.put(1,b1);  
	    map.put(2,b2);  
	    map.put(3,b3);  
	      
	    //Traversing map  
	    for(Map.Entry<Integer, Book> entry:map.entrySet()){    
	        int key=entry.getKey();  
	        Book b=entry.getValue();  
	        System.out.println(key+" Details:");  
	        System.out.println(b.id+" "+b.name+" "+b.author+" "+b.publisher+" "+b.quantity);   
	    }    
	}    
	
	// =============================================================================
	
	
	public static String submitPutRequest(String appUrl, String requestBody)
			throws IOException, JSONException, Exception {

		
		// =========================================================================
		
		 String url = "http://www.apache.org/";

		    // Create an instance of HttpClient.
		    HttpClient client1 = new HttpClient();

		    // Create a method instance.
		    GetMethod method = new GetMethod(url);
		    
		    // Provide custom retry handler is necessary
		 //   method.getParams().setParameter(HttpMethodParams.RETRY_HANDLER, 
		  //  		new DefaultHttpMethodRetryHandler(3, false));

		    try {
		      // Execute the method.
		      int statusCode = client1.executeMethod(method);

		      if (statusCode != HttpStatus.SC_OK) {
		        System.err.println("Method failed: " + method.getStatusLine());
		      }

		      // Read the response body.
		      byte[] responseBody = method.getResponseBody();

		      // Deal with the response.
		      // Use caution: ensure correct character encoding and is not binary data
		      System.out.println(new String(responseBody));

		    } catch (HttpException e1) {
		      System.err.println("Fatal protocol violation: " + e1.getMessage());
		      e1.printStackTrace();
		    } catch (IOException e) {
		      System.err.println("Fatal transport error: " + e.getMessage());
		      e.printStackTrace();
		    } finally {
		      // Release the connection.
		      method.releaseConnection();
		    }  
		  

		// =================================================================
		
		
		
		
		
		//logger.info("In the method submitPutRequest with params appUrl : " + appUrl + "requestBody :" + requestBody);
	//	StringRequestEntity requestEntity = new StringRequestEntity(requestBody, "application/json", "UTF-8");
		String responseBody = null;
		HttpClient client = new HttpClient();
		// StringBuilder sb = new StringBuilder(appUrl);
		PutMethod putMethod = new PutMethod(appUrl);
	//	putMethod.setRequestEntity(requestEntity);
		int statusCode = client.executeMethod(putMethod); // check it
		//logger.debug("Checking the statusCode of the hit end point is : " + statusCode);
		if (statusCode == HttpStatus.SC_OK || statusCode == HttpStatus.SC_ACCEPTED
				|| statusCode == HttpStatus.SC_CREATED || statusCode == HttpStatus.SC_BAD_REQUEST) {
			responseBody = putMethod.getResponseBodyAsString();
		} else if (statusCode == HttpStatus.SC_INTERNAL_SERVER_ERROR) {
			throw new Exception("HTTP status code returned is a failure : " + statusCode);
		} else {
			//logger.warn("Status Code was neither success nor accepted nor bad request.");
			responseBody = putMethod.getResponseBodyAsString();
		}
		System.out.println("About to exit the method submitPutRequest with responseBody : " + responseBody);
		return responseBody;

	}

	
	
	
	
	
	
	
	// =========================================================
	
	public static void  getinfo() throws FileNotFoundException {
	    //public static void main(String [] args)  throws IOException {

	        // The name of the file to open.
	           String fileName = "C:\\classinterview\\student.txt";

	        // This will reference one line at a time
	           String line = null;

	 // Scaning the file
	           Scanner scanFile = new Scanner(new File(fileName));

	 // Making a string array
	         String[] student = new String[20];

	 //this is counter
	 int i = 0;

	 //Adding the name into the array
	        while(scanFile.hasNext())
	 {
	  student[i] = scanFile.next();
	   i++;
	  
	 }
	 
	 // Printing the array
	          for( i = 0; i < student.length; i++)
	 {
	       System.out.println(student[i]);
	 }
	          
	
	}
	
	
	
	// ==============================================================================
	
	public static void arrayexample() {
		
		
		String [] student = {"Alam","popy","farhana"};
		
		System.out.println(student.length);
		if (student.length == 3)
		{
		System.out.println("Matched");
		}
		for (int i=0;i<student.length; i++)
			System.out.println(student[i]);
		
	}
		
		
		
	public static void testsel()
	{
		
		WebDriver driver = null;
			// Create a new instance of the Firefox driver

	        driver = new FirefoxDriver();

	        //Put a Implicit wait, this means that any search for elements on the page could take the time the implicit wait is set for before throwing exception

	        driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);

	        //Launch the Online Store Website

	        driver.get("http://www.store.demoqa.com");

	        // Find the element that's ID attribute is 'account'(My Account) 

	        driver.findElement(By.xpath(".//*[@id='account']/a")).click();

	        // Find the element that's ID attribute is 'log' (Username)

	        // Enter Username on the element found by above desc.

	        driver.findElement(By.id("log")).sendKeys("testuser_1"); 

	        // Find the element that's ID attribute is 'pwd' (Password)

	        // Enter Password on the element found by the above desc.

	        driver.findElement(By.id("pwd")).sendKeys("Test@123");

	        // Now submit the form. WebDriver will find the form for us from the element 

	        driver.findElement(By.id("login")).click();

	        // Print a Log In message to the screen

	        System.out.println("Login Successfully");

	        // Find the element that's ID attribute is 'account_logout' (Log Out)

	        driver.findElement (By.xpath(".//*[@id='account_logout']/a")).click();

	        // Print a Log In message to the screen

	        System.out.println("LogOut Successfully");

	        // Close the driver

	        driver.quit();

		}

	
	
	
	
	
	
	
	
	
	
	// ===============================================================================
	
	 private static final String FILE_NAME = "/tmp/MyFirstExcel.xlsx";

	    public static void readexcel() {

	        try {

	            FileInputStream excelFile = new FileInputStream(new File(FILE_NAME));
	            Workbook workbook = new HSSFWorkbook(excelFile);
	            Sheet datatypeSheet = workbook.getSheetAt(0);
	            Iterator<Row> iterator = datatypeSheet.iterator();

	            while (iterator.hasNext()) {

	                Row currentRow = iterator.next();
	                Iterator<Cell> cellIterator = currentRow.iterator();

	                while (cellIterator.hasNext()) {

	                    Cell currentCell = cellIterator.next();
	                    //getCellTypeEnum shown as deprecated for version 3.15
	                    //getCellTypeEnum ill be renamed to getCellType starting from version 4.0
	                    if (currentCell.getCellType() == Cell.CELL_TYPE_STRING) {
	                        System.out.print(currentCell.getStringCellValue() + "--");
	                    } else if (currentCell.getCellType() == Cell.CELL_TYPE_NUMERIC) {
	                        System.out.print(currentCell.getNumericCellValue() + "--");
	                    }

	                }
	                System.out.println();

	            }
	        } catch (FileNotFoundException e) {
	            e.printStackTrace();
	        } catch (IOException e) {
	        	
	        	
	            e.printStackTrace();
	        }

	    }
	    
	    
	    
	
	
	
	public static void writeExcel() throws FileNotFoundException, IOException
	{
		
		
		   HSSFWorkbook workbook = new HSSFWorkbook();
	        HSSFSheet sheet = workbook.createSheet("Java Books");
	         
	        Object[][] bookData = {
	                {"Head First Java", "Kathy Serria", 79},
	                {"Effective Java", "Joshua Bloch", 36},
	                {"Clean Code", "Robert martin", 42},
	                {"Thinking in Java", "Bruce Eckel", 35},
	        };
	 
	        int rowCount = 0;
	         
	        for (Object[] aBook : bookData) {
	            Row row = sheet.createRow(++rowCount);
	             
	            int columnCount = 0;
	             
	            for (Object field : aBook) {
	                Cell cell = row.createCell(++columnCount);
	                if (field instanceof String) {
	                    cell.setCellValue((String) field);
	                } else if (field instanceof Integer) {
	                    cell.setCellValue((Integer) field);
	                }
	            }
	             
	        }
	         
	         
	        try (FileOutputStream outputStream = new FileOutputStream("c:\\classinterview\\JavaBooks.xlsx")) {
	            workbook.write(outputStream);
	        }
	    }
	 
		
		
		
		
	
	
	public static WebDriver  invokeandverifyur(String url,String exph1value)
	{
		
		
		System.out.println("Internet Explorer is selected");
		System.setProperty("webdriver.ie.driver","C:\\classinterview\\IEDriverServer.exe\\");
		WebDriver driver = new InternetExplorerDriver();
		driver.get(url);
		String acth1value = driver.findElement(By.xpath("//h1")).getText(); 
		System.out.println("h1value=" + acth1value);
		boolean result=compareString (acth1value,exph1value);
		System.out.println("result=" + result);
		if (!result)
			
			writereport(Msg);
		return driver;
		
	} 
	
	public static void   getallLinks(String url)
	{
		System.setProperty("webdriver.ie.driver","C:\\classinterview\\IEDriverServer.exe\\");

		WebDriver driver = new InternetExplorerDriver();
		driver.get(url);
	java.util.List<WebElement> links = driver.findElements(By.tagName("a"));
	 
	System.out.println(links.size());

	for (int i = 1; i<=links.size(); i=i+1)

	{

		System.out.println(links.get(i).getText());

	}
	
	}
	
	public static void comparearrays (String []  explinknm, String [] actlinknm )
	{
	//String [] explinknm = {"add Student","Add Payment"};
	//String [] actlinknm = {"add student","add payment"};


	for (int i =0; i <  explinknm.length; i ++ )
	 {

	     if (explinknm[i] == actlinknm [i] )
	     {
	        System.out.println ("Matched");
	        
	      }

	    else 
	         {
	                System.out.println (" Not Matched");
	                break;
	                }       


	    }

	}


	
	public static void writereport(String Msg)
	{
		System.out.println("writing Reports ...");
		
	}
	
	public static boolean  compareString(String str1,String str2)
	{
	
		
		System.out.println(str1 + "=" + str1.length() +"="  + str2 + "=" + str2.length());
		
		if (str1.equalsIgnoreCase(str2 ) )
			return true;
		else
			return false;
		
	}

	
	
	
	
	/*
	 *  Get all the Input values from config.properties 
	 * 
	 */
	public static String GetInputInfo( String Filenm,String env) throws IOException
    {
		
		
     Properties  prop = new Properties();
    
     FileInputStream input = new FileInputStream(Filenm);
     prop.load(input);
     String puserid=prop.getProperty("userid");
     String ppassword=prop.getProperty("password");
     String ph1=prop.getProperty("H1");
     String purl=prop.getProperty("url");
     String retrec=puserid + "," + ppassword + "," + ph1  + "," + purl ;
     return retrec;
     
       }
	
	
	public static void populatescreen (WebDriver driver,String pstid)
	
	{
		
		
		driver.findElement(By.id("stno")).sendKeys(pstid);
		driver.findElement(By.id("subbtn")).click();
		
		
	}
	
	public static void readdb( String dbConnectionURL,String usernm,String password,String sqlQuery) throws Exception
	{
		ResultSet rs=null ;
		Statement statement=null;
		Connection cn=null;
		try {
	Driver driver = new oracle.jdbc.OracleDriver();
	DriverManager.registerDriver(driver);

	// Create a connection from the Driver Manager.
	 cn = DriverManager.getConnection(dbConnectionURL, usernm, password);
	// Open a statement and run the query fetching a resultset
	 statement  = cn.createStatement();
	 rs = statement.executeQuery(sqlQuery);

			int i = 0;
		while (rs.next()) {
			
			Map<String, String> recordVal = new HashMap<String, String>();
				System.out.println("Checking columns value : " + rs.getString(2));
				recordVal.put("x"+i, rs.getString(1));
				i++;
			}
	
} catch (SQLException sqlEx) {
	System.out.println("Below SQL exception happened while connecting and executing sqlQuery to Database.");
	System.out.println(sqlEx.getStackTrace());
	System.out.println(sqlEx);
	sqlEx.printStackTrace();
	throw sqlEx;
} catch (Exception ex) {
	System.out.println("Below exception happened while connecting and executing sqlQuery to Database.");
	System.out.println(ex.getStackTrace());
	System.out.println(ex);
	ex.printStackTrace();
	throw ex;
} finally {
	if (rs != null)
		rs.close();
	if (statement != null)
		statement.close();
	if (cn != null)
		cn.close();
}
	
}

	
// ===============================================================================================	
	
	
	
}


